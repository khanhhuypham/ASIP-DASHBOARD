{"ast":null,"code":"import { COOKIE_KEYS } from \"../constants/cookie-key\";\nexport default class CookieUtils {\n  static getCookie(name) {\n    const nameEQ = name + \"=\";\n    const cookies = document.cookie.split(\";\");\n    for (const cookie of cookies) {\n      const trimmedCookie = cookie.trim();\n      if (trimmedCookie.startsWith(nameEQ)) {\n        const cookieValue = trimmedCookie.substring(nameEQ.length);\n        try {\n          return JSON.parse(cookieValue);\n        } catch (error) {\n          console.error(\"Error parsing cookie:\", error);\n          return null;\n        }\n      }\n    }\n    return null;\n  }\n  static eraseCookie(name) {\n    // document.cookie = `${name}=; Max-Age=-99999999; path=/; SameSite=Strict; Secure; HttpOnly`;\n    document.cookie = `${name}=; Max-Age=-99999999; path=/;`;\n  }\n  static setCookie(name, value, hours = 12\n  // secure: boolean = false,\n  // httpOnly: boolean = true,\n  // sameSite: \"Strict\" | \"Lax\" | \"None\" = \"Strict\"\n  /*\n          Strict: Cookie không bao giờ được gửi với các yêu cầu từ trang khác.\n          Lax: Cookie được gửi với các yêu cầu điều hướng trên cùng một site (mức bảo mật thấp hơn Strict).\n          None: Cookie có thể được gửi với các yêu cầu từ các trang khác (cần kết hợp với Secure).\n      */) {\n    const expires = `max-age=${hours * 60 * 60}`; // if days: (days * 24 * 60 * 60)\n    let cookie = `${name}=${value}; ${expires}; path=/`;\n    // Thêm thuộc tính bảo mật\n    // if (secure) { cookie += \"; Secure\"; } // Chỉ cho phép cookie được gửi qua kết nối HTTPS.\n    // if (httpOnly) { cookie += \"; HttpOnly\"; } //Ngăn chặn JavaScript truy cập vào cookie, bảo vệ chống tấn công XSS.\n    // cookie += `; SameSite=${sameSite}`; // Ngăn chặn cookie được gửi trong các yêu cầu từ các trang khác (bảo vệ chống lại CSRF).\n    document.cookie = cookie;\n  }\n  static getCurrentUser() {\n    const user = this.getCookie(COOKIE_KEYS.USER);\n    return user !== null && user !== void 0 ? user : {};\n  }\n}","map":{"version":3,"names":["COOKIE_KEYS","CookieUtils","getCookie","name","nameEQ","cookies","document","cookie","split","trimmedCookie","trim","startsWith","cookieValue","substring","length","JSON","parse","error","console","eraseCookie","setCookie","value","hours","expires","getCurrentUser","user","USER"],"sources":["/Users/phamkhanhhuy/Documents/OVERATE-VNTECH/TECHRES-PROJECTS/MOBILES/iOS/my-project/ASIP-DASHBOARD/src/utils/cookie-utils.ts"],"sourcesContent":["import { COOKIE_KEYS } from \"../constants/cookie-key\";\n\nexport default class CookieUtils {\n  static getCookie<T = string>(name: string): T | null {\n    const nameEQ = name + \"=\";\n    const cookies = document.cookie.split(\";\");\n    for (const cookie of cookies) {\n      const trimmedCookie = cookie.trim();\n      if (trimmedCookie.startsWith(nameEQ)) {\n        const cookieValue = trimmedCookie.substring(nameEQ.length);\n        try {\n          return JSON.parse(cookieValue) as T;\n        } catch (error) {\n          console.error(\"Error parsing cookie:\", error);\n          return null;\n        }\n      }\n    }\n    return null;\n  }\n  static eraseCookie(name: string): void {\n    // document.cookie = `${name}=; Max-Age=-99999999; path=/; SameSite=Strict; Secure; HttpOnly`;\n    document.cookie = `${name}=; Max-Age=-99999999; path=/;`;\n  }\n\n  static setCookie(\n    name: string,\n    value: string,\n    hours: number = 12\n    // secure: boolean = false,\n    // httpOnly: boolean = true,\n    // sameSite: \"Strict\" | \"Lax\" | \"None\" = \"Strict\"\n    /*\n            Strict: Cookie không bao giờ được gửi với các yêu cầu từ trang khác.\n            Lax: Cookie được gửi với các yêu cầu điều hướng trên cùng một site (mức bảo mật thấp hơn Strict).\n            None: Cookie có thể được gửi với các yêu cầu từ các trang khác (cần kết hợp với Secure).\n        */\n  ): void {\n    const expires = `max-age=${hours * 60 * 60}`; // if days: (days * 24 * 60 * 60)\n    let cookie = `${name}=${value}; ${expires}; path=/`;\n    // Thêm thuộc tính bảo mật\n    // if (secure) { cookie += \"; Secure\"; } // Chỉ cho phép cookie được gửi qua kết nối HTTPS.\n    // if (httpOnly) { cookie += \"; HttpOnly\"; } //Ngăn chặn JavaScript truy cập vào cookie, bảo vệ chống tấn công XSS.\n    // cookie += `; SameSite=${sameSite}`; // Ngăn chặn cookie được gửi trong các yêu cầu từ các trang khác (bảo vệ chống lại CSRF).\n    document.cookie = cookie;\n  }\n\n  static getCurrentUser(): any {\n    const user = this.getCookie<any>(COOKIE_KEYS.USER);\n    return user ?? {};\n  }\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,yBAAyB;AAErD,eAAe,MAAMC,WAAW,CAAC;EAC/B,OAAOC,SAASA,CAAaC,IAAY,EAAY;IACnD,MAAMC,MAAM,GAAGD,IAAI,GAAG,GAAG;IACzB,MAAME,OAAO,GAAGC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC;IAC1C,KAAK,MAAMD,MAAM,IAAIF,OAAO,EAAE;MAC5B,MAAMI,aAAa,GAAGF,MAAM,CAACG,IAAI,CAAC,CAAC;MACnC,IAAID,aAAa,CAACE,UAAU,CAACP,MAAM,CAAC,EAAE;QACpC,MAAMQ,WAAW,GAAGH,aAAa,CAACI,SAAS,CAACT,MAAM,CAACU,MAAM,CAAC;QAC1D,IAAI;UACF,OAAOC,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC;QAChC,CAAC,CAAC,OAAOK,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7C,OAAO,IAAI;QACb;MACF;IACF;IACA,OAAO,IAAI;EACb;EACA,OAAOE,WAAWA,CAAChB,IAAY,EAAQ;IACrC;IACAG,QAAQ,CAACC,MAAM,GAAG,GAAGJ,IAAI,+BAA+B;EAC1D;EAEA,OAAOiB,SAASA,CACdjB,IAAY,EACZkB,KAAa,EACbC,KAAa,GAAG;EAChB;EACA;EACA;EACA;AACJ;AACA;AACA;AACA,QAJI,EAKM;IACN,MAAMC,OAAO,GAAG,WAAWD,KAAK,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IAC9C,IAAIf,MAAM,GAAG,GAAGJ,IAAI,IAAIkB,KAAK,KAAKE,OAAO,UAAU;IACnD;IACA;IACA;IACA;IACAjB,QAAQ,CAACC,MAAM,GAAGA,MAAM;EAC1B;EAEA,OAAOiB,cAAcA,CAAA,EAAQ;IAC3B,MAAMC,IAAI,GAAG,IAAI,CAACvB,SAAS,CAAMF,WAAW,CAAC0B,IAAI,CAAC;IAClD,OAAOD,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAI,CAAC,CAAC;EACnB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}