{"ast":null,"code":"var _jsxFileName = \"/Users/phamkhanhhuy/Documents/OVERATE-VNTECH/TECHRES-PROJECTS/MOBILES/iOS/my-project/ASIP-DASHBOARD/src/state/loading-context.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// LoadingContext.tsx\nimport React, { createContext, useState, useContext } from 'react';\nimport { LoadingCustom } from '../components/custom/loading-custom';\n\n// Định nghĩa kiểu cho context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Tạo context với giá trị mặc định\nconst LoadingContext = /*#__PURE__*/createContext({\n  isLoading: false,\n  setIsLoading: () => {}\n});\n\n// Provider cho context\n\nexport const LoadingProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  return /*#__PURE__*/_jsxDEV(LoadingContext.Provider, {\n    value: {\n      isLoading,\n      setIsLoading\n    },\n    children: [children, isLoading && /*#__PURE__*/_jsxDEV(LoadingCustom, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n// Hook tùy chỉnh để sử dụng context\n_s(LoadingProvider, \"EmvgwIb3cHpoFpeP+WmEDbjx4y4=\");\n_c = LoadingProvider;\nexport const useLoading = () => {\n  _s2();\n  return useContext(LoadingContext);\n};\n_s2(useLoading, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"LoadingProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","LoadingCustom","jsxDEV","_jsxDEV","LoadingContext","isLoading","setIsLoading","LoadingProvider","children","_s","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLoading","_s2","$RefreshReg$"],"sources":["/Users/phamkhanhhuy/Documents/OVERATE-VNTECH/TECHRES-PROJECTS/MOBILES/iOS/my-project/ASIP-DASHBOARD/src/state/loading-context.tsx"],"sourcesContent":["// LoadingContext.tsx\nimport React, { createContext, useState, useContext, ReactNode } from 'react';\nimport { LoadingCustom } from '../components/custom/loading-custom';\n\n// Định nghĩa kiểu cho context\ninterface LoadingContextType {\n    isLoading: boolean;\n    setIsLoading: (loading: boolean) => void;\n}\n\n// Tạo context với giá trị mặc định\nconst LoadingContext = createContext<LoadingContextType>({\n    isLoading: false,\n    setIsLoading: () => { },\n});\n\n// Provider cho context\ninterface LoadingProviderProps {\n    children: ReactNode;\n}\n\nexport const LoadingProvider: React.FC<LoadingProviderProps> = ({ children }) => {\n    const [isLoading, setIsLoading] = useState(false);\n\n    return (\n        <LoadingContext.Provider value={{ isLoading, setIsLoading }}>\n            {children}\n            {isLoading && <LoadingCustom />}\n        </LoadingContext.Provider>\n    );\n};\n\n// Hook tùy chỉnh để sử dụng context\nexport const useLoading = () => useContext(LoadingContext);\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAmB,OAAO;AAC7E,SAASC,aAAa,QAAQ,qCAAqC;;AAEnE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA;AACA,MAAMC,cAAc,gBAAGN,aAAa,CAAqB;EACrDO,SAAS,EAAE,KAAK;EAChBC,YAAY,EAAEA,CAAA,KAAM,CAAE;AAC1B,CAAC,CAAC;;AAEF;;AAKA,OAAO,MAAMC,eAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7E,MAAM,CAACJ,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEjD,oBACII,OAAA,CAACC,cAAc,CAACM,QAAQ;IAACC,KAAK,EAAE;MAAEN,SAAS;MAAEC;IAAa,CAAE;IAAAE,QAAA,GACvDA,QAAQ,EACRH,SAAS,iBAAIF,OAAA,CAACF,aAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAElC,CAAC;;AAED;AAAAN,EAAA,CAXaF,eAA+C;AAAAS,EAAA,GAA/CT,eAA+C;AAY5D,OAAO,MAAMU,UAAU,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMlB,UAAU,CAACI,cAAc,CAAC;AAAA;AAACc,GAAA,CAA9CD,UAAU;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}